// Code generated by tool/gen.go.
// DO NOT EDIT!

package pb

import (
	"errors"
)

//解包消息
func Runpack(id uint32, b []byte) (interface{}, error) {
	switch id {
	case 3000:
		msg := new(SBuy)
		msg.Code = 3000
		err := msg.Unmarshal(b)
		return msg, err
	case 2004:
		msg := new(SChatVoice)
		msg.Code = 2004
		err := msg.Unmarshal(b)
		return msg, err
	case 6021:
		msg := new(SHuiYinPushDealer)
		msg.Code = 6021
		err := msg.Unmarshal(b)
		return msg, err
	case 6025:
		msg := new(SHuiYinProfit)
		msg.Code = 6025
		err := msg.Unmarshal(b)
		return msg, err
	case 6024:
		msg := new(SGetOpenResult)
		msg.Code = 6024
		err := msg.Unmarshal(b)
		return msg, err
	case 6026:
		msg := new(SHuiYinDeskBetInfo)
		msg.Code = 6026
		err := msg.Unmarshal(b)
		return msg, err
	case 3010:
		msg := new(SShop)
		msg.Code = 3010
		err := msg.Unmarshal(b)
		return msg, err
	case 1008:
		msg := new(SResetPwd)
		msg.Code = 1008
		err := msg.Unmarshal(b)
		return msg, err
	case 6012:
		msg := new(SHuiYinRoomBet)
		msg.Code = 6012
		err := msg.Unmarshal(b)
		return msg, err
	case 6016:
		msg := new(SHuiYinCamein)
		msg.Code = 6016
		err := msg.Unmarshal(b)
		return msg, err
	case 3003:
		msg := new(SJtpayOrder)
		msg.Code = 3003
		err := msg.Unmarshal(b)
		return msg, err
	case 3004:
		msg := new(SWxpayQuery)
		msg.Code = 3004
		err := msg.Unmarshal(b)
		return msg, err
	case 1004:
		msg := new(SWxLogin)
		msg.Code = 1004
		err := msg.Unmarshal(b)
		return msg, err
	case 6008:
		msg := new(SHuiYinGames)
		msg.Code = 6008
		err := msg.Unmarshal(b)
		return msg, err
	case 6009:
		msg := new(SHuiYinEnterRoom)
		msg.Code = 6009
		err := msg.Unmarshal(b)
		return msg, err
	case 6011:
		msg := new(SHuiYinLeave)
		msg.Code = 6011
		err := msg.Unmarshal(b)
		return msg, err
	case 6014:
		msg := new(SHuiYinDealerList)
		msg.Code = 6014
		err := msg.Unmarshal(b)
		return msg, err
	case 1006:
		msg := new(SLoginOut)
		msg.Code = 1006
		err := msg.Unmarshal(b)
		return msg, err
	case 1010:
		msg := new(STourist)
		msg.Code = 1010
		err := msg.Unmarshal(b)
		return msg, err
	case 1022:
		msg := new(SUserData)
		msg.Code = 1022
		err := msg.Unmarshal(b)
		return msg, err
	case 6007:
		msg := new(SHuiYinRecords)
		msg.Code = 6007
		err := msg.Unmarshal(b)
		return msg, err
	case 6010:
		msg := new(SHuiYinRoomRoles)
		msg.Code = 6010
		err := msg.Unmarshal(b)
		return msg, err
	case 6020:
		msg := new(SHuiYinDeskState)
		msg.Code = 6020
		err := msg.Unmarshal(b)
		return msg, err
	case 6023:
		msg := new(SGetLastWins)
		msg.Code = 6023
		err := msg.Unmarshal(b)
		return msg, err
	case 3002:
		msg := new(SWxpayOrder)
		msg.Code = 3002
		err := msg.Unmarshal(b)
		return msg, err
	case 1002:
		msg := new(SRegist)
		msg.Code = 1002
		err := msg.Unmarshal(b)
		return msg, err
	case 1024:
		msg := new(SGetCurrency)
		msg.Code = 1024
		err := msg.Unmarshal(b)
		return msg, err
	case 1028:
		msg := new(SPushCurrency)
		msg.Code = 1028
		err := msg.Unmarshal(b)
		return msg, err
	case 6018:
		msg := new(SHuiYinRoomList)
		msg.Code = 6018
		err := msg.Unmarshal(b)
		return msg, err
	case 6022:
		msg := new(SGetTrend)
		msg.Code = 6022
		err := msg.Unmarshal(b)
		return msg, err
	case 3006:
		msg := new(SApplePay)
		msg.Code = 3006
		err := msg.Unmarshal(b)
		return msg, err
	case 2006:
		msg := new(SBroadcast)
		msg.Code = 2006
		err := msg.Unmarshal(b)
		return msg, err
	case 1000:
		msg := new(SLogin)
		msg.Code = 1000
		err := msg.Unmarshal(b)
		return msg, err
	case 6013:
		msg := new(SHuiYinDealer)
		msg.Code = 6013
		err := msg.Unmarshal(b)
		return msg, err
	case 6017:
		msg := new(SHuiYinGameover)
		msg.Code = 6017
		err := msg.Unmarshal(b)
		return msg, err
	case 6019:
		msg := new(SHuiYinSit)
		msg.Code = 6019
		err := msg.Unmarshal(b)
		return msg, err
	case 6027:
		msg := new(SHuiYinPushBeDealer)
		msg.Code = 6027
		err := msg.Unmarshal(b)
		return msg, err
	case 2003:
		msg := new(SChatText)
		msg.Code = 2003
		err := msg.Unmarshal(b)
		return msg, err
	case 2008:
		msg := new(SNotice)
		msg.Code = 2008
		err := msg.Unmarshal(b)
		return msg, err
	case 1050:
		msg := new(SPing)
		msg.Code = 1050
		err := msg.Unmarshal(b)
		return msg, err
	case 6015:
		msg := new(SPk10Record)
		msg.Code = 6015
		err := msg.Unmarshal(b)
		return msg, err
	default:
		return nil, errors.New("unknown message")
	}
}