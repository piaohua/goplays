// Code generated by tool/gen.go.
// DO NOT EDIT!

package pb

import (
	"errors"
)

//解包消息
func Unpack(id uint32, b []byte) (interface{}, error) {
	switch id {
	case 6013:
		msg := new(CHuiYinDealer)
		msg.Code = 6013
		err := msg.Unmarshal(b)
		return msg, err
	case 6015:
		msg := new(CPk10Record)
		msg.Code = 6015
		err := msg.Unmarshal(b)
		return msg, err
	case 6023:
		msg := new(CGetLastWins)
		msg.Code = 6023
		err := msg.Unmarshal(b)
		return msg, err
	case 3002:
		msg := new(CWxpayOrder)
		msg.Code = 3002
		err := msg.Unmarshal(b)
		return msg, err
	case 3010:
		msg := new(CShop)
		msg.Code = 3010
		err := msg.Unmarshal(b)
		return msg, err
	case 1008:
		msg := new(CResetPwd)
		msg.Code = 1008
		err := msg.Unmarshal(b)
		return msg, err
	case 1024:
		msg := new(CGetCurrency)
		msg.Code = 1024
		err := msg.Unmarshal(b)
		return msg, err
	case 6012:
		msg := new(CHuiYinRoomBet)
		msg.Code = 6012
		err := msg.Unmarshal(b)
		return msg, err
	case 6014:
		msg := new(CHuiYinDealerList)
		msg.Code = 6014
		err := msg.Unmarshal(b)
		return msg, err
	case 6018:
		msg := new(CHuiYinRoomList)
		msg.Code = 6018
		err := msg.Unmarshal(b)
		return msg, err
	case 6024:
		msg := new(CGetOpenResult)
		msg.Code = 6024
		err := msg.Unmarshal(b)
		return msg, err
	case 1010:
		msg := new(CTourist)
		msg.Code = 1010
		err := msg.Unmarshal(b)
		return msg, err
	case 1050:
		msg := new(CPing)
		msg.Code = 1050
		err := msg.Unmarshal(b)
		return msg, err
	case 6009:
		msg := new(CHuiYinEnterRoom)
		msg.Code = 6009
		err := msg.Unmarshal(b)
		return msg, err
	case 6010:
		msg := new(CHuiYinRoomRoles)
		msg.Code = 6010
		err := msg.Unmarshal(b)
		return msg, err
	case 6019:
		msg := new(CHuiYinSit)
		msg.Code = 6019
		err := msg.Unmarshal(b)
		return msg, err
	case 3003:
		msg := new(CJtpayOrder)
		msg.Code = 3003
		err := msg.Unmarshal(b)
		return msg, err
	case 3004:
		msg := new(CWxpayQuery)
		msg.Code = 3004
		err := msg.Unmarshal(b)
		return msg, err
	case 3006:
		msg := new(CApplePay)
		msg.Code = 3006
		err := msg.Unmarshal(b)
		return msg, err
	case 2003:
		msg := new(CChatText)
		msg.Code = 2003
		err := msg.Unmarshal(b)
		return msg, err
	case 1022:
		msg := new(CUserData)
		msg.Code = 1022
		err := msg.Unmarshal(b)
		return msg, err
	case 6022:
		msg := new(CGetTrend)
		msg.Code = 6022
		err := msg.Unmarshal(b)
		return msg, err
	case 6025:
		msg := new(CHuiYinProfit)
		msg.Code = 6025
		err := msg.Unmarshal(b)
		return msg, err
	case 2008:
		msg := new(CNotice)
		msg.Code = 2008
		err := msg.Unmarshal(b)
		return msg, err
	case 1000:
		msg := new(CLogin)
		msg.Code = 1000
		err := msg.Unmarshal(b)
		return msg, err
	case 6008:
		msg := new(CHuiYinGames)
		msg.Code = 6008
		err := msg.Unmarshal(b)
		return msg, err
	case 6020:
		msg := new(CHuiYinDeskState)
		msg.Code = 6020
		err := msg.Unmarshal(b)
		return msg, err
	case 6011:
		msg := new(CHuiYinLeave)
		msg.Code = 6011
		err := msg.Unmarshal(b)
		return msg, err
	case 6026:
		msg := new(CHuiYinDeskBetInfo)
		msg.Code = 6026
		err := msg.Unmarshal(b)
		return msg, err
	case 1002:
		msg := new(CRegist)
		msg.Code = 1002
		err := msg.Unmarshal(b)
		return msg, err
	case 6007:
		msg := new(CHuiYinRecords)
		msg.Code = 6007
		err := msg.Unmarshal(b)
		return msg, err
	case 3000:
		msg := new(CBuy)
		msg.Code = 3000
		err := msg.Unmarshal(b)
		return msg, err
	case 2004:
		msg := new(CChatVoice)
		msg.Code = 2004
		err := msg.Unmarshal(b)
		return msg, err
	case 1004:
		msg := new(CWxLogin)
		msg.Code = 1004
		err := msg.Unmarshal(b)
		return msg, err
	default:
		return nil, errors.New("unknown message")
	}
}